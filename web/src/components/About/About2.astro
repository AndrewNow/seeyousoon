---
import aboutVideo from "../../assets/footer/footer.mp4";
import SysWritten from "../../assets/syswritten.png";
import { Image } from "astro:assets";
import StickyContainer from "./StickyContainer.astro";
---

<div class="sticky-area-0" id="sticky-container-0">
  <div class="sticky-container-0" id="sticky-el">
    <div class="text-wrapper-0">
      <h4 id="sys-0">"see you soon"</h4>
    </div>
  </div>
</div>
<div class="sticky-area-1" id="sticky-container-1">
  <div class="sticky-container-1" id="sticky-el">
    <div class="text-wrapper" id="bio-wrapper">
      <!-- <h4 id="sys">- "See you soon"</h4> -->
      <h1 id="sys-bio">
        <div class="text-hidden">
          <div id="animated-text-container">
            An expression of farewell, with the intention of meeting once again.
          </div>
        </div>
      </h1>
    </div>
  </div>
</div>
<div>
  <StickyContainer />
</div>

<style lang="scss" is:global>
  .sticky-area-0 {
    height: 100vh;
    // overflow-x: hidden;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    // opacity: 0;
  }
  #sys-0 {
    transform: translateY(-12vh);
    opacity: 0;
  }
  .text-wrapper-0 {
    display: grid;
    width: 60%;
    h4 {
      font-family: "Bradford-Light-Italic";
    }
  }
  .sticky-area-1 {
    height: 300vh;
    // overflow-x: hidden;
    width: 100%;
    position: relative;
  }
  .sticky-area-2 {
    height: 300vh;
    // overflow-x: hidden;
    width: 100%;
    z-index: 10;
    position: relative;
    padding-bottom: 5rem;
  }
  .sticky-container-0 {
    height: 50vh;
    margin: 0 auto;
    display: grid;
    place-items: center;
    position: sticky;
    // border: 1px solid green;
    transform: translateY(50%);
    top: 0;
  }
  .sticky-container-1 {
    height: 50vh;
    margin: 0 auto;
    display: grid;
    place-items: center;
    position: sticky;
    transform: translateY(50%);
    top: 0;
  }
  .text-wrapper {
    display: grid;
    width: 60%;
    h4 {
      font-family: "Bradford-Light-Italic";
    }
  }

  .video-container {
    // max-height: 85vh;
    // height: 85vh;
    // max-width: 95vw;
    // object-fit: cover;
    // overflow: hidden;
    // clip-path: inset(20% 45% 20% 45% round 8px);
    // border-radius: 40px;
    // filter: brightness(1);
  }
  .about-video-media {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .sys-written-logo {
    margin: 50vh auto;
    position: relative;
    z-index: 3;
  }
  .about-animated-word {
    display: inline-block;
    // color: var(--grey-100);
    color: var(--beige-300);
    // opacity: 0;
    // transform: translateY(40px) scaleX(0);
  }

  #sys {
    opacity: 0;
  }
  #sys-bio {
    // opacity: 0;
  }
  .text-hidden {
    overflow-y: hidden;
  }
  #animated-text-container {
    transform: translateY(2vh);
    opacity: 0;
    filter: blur(10px);
  }

  @media (max-width: 576px) {
    .sticky-area-1 {
      height: 400vh;
    }
    .sticky-area-2 {
      margin-bottom: 3rem;
    }
    .text-wrapper {
      width: 90%;
      text-align: center;
    }
    #sys {
      margin-bottom: 1rem;
    }
    #sys-bio {
      font-size: 28px;
    }
    .video-container {
      max-width: 98vw;
      clip-path: inset(20% 38% 20% 38% round 8px);
    }
  }
</style>

<script>
  import { timeline, scroll, inView, animate } from "motion";

  const scrollTrack1 = document.getElementById("sticky-container-1");
  const scrollTrack2 = document.getElementById("sticky-container-2");

  const sys = document.getElementById("sys");
  const sys0 = document.getElementById("sys-0");
  const sysBio = document.getElementById("sys-bio");

  const textContainer = document.getElementById("animated-text-container");
  const wordsArr = textContainer.innerText.split(" ");

  const textBio = document.getElementById("bio-wrapper");

  inView(textBio, () => {
    animate(sys0, { opacity: 1 }, { duration: 2.5 });
    return () => {
      animate(sys0, { opacity: 0 }, { duration: 0.5 });
    };
  });

  let charIndex = 0; // Track the index of characters

  const spannedWords = wordsArr.map((word, wordIndex) => {
    const wordCharacters = word.split("");
    const spannedCharacters = wordCharacters.map((char) => {
      if (char === " ") {
        return " "; // Preserve spaces without animation
      } else {
        const charId = `char${charIndex}`;
        charIndex++;
        return `<span class="about-animated-word" id="${charId}">${char}</span>`;
      }
    });

    return `<span class="about-animated-word" id="word${wordIndex}" style="white-space: nowrap;">${spannedCharacters.join("")}</span>`;
  });

  textContainer.innerHTML = spannedWords.join(" ");

  let sequence1 = [
    [
      sys,
      {
        opacity: 1,
      },
    ],
    [
      textContainer,
      {
        transform: `translateY(0)`,
        opacity: 1,
        filter: `blur(0)`,
      },
    ],
  ];

  const animatedChars = document.querySelectorAll(".about-animated-word");

  animatedChars.forEach((char) => {
    const charId = char.id;
    if (charId && charId.startsWith("char")) {
      sequence1.push([
        char,
        {
          color: `var(--brown-300)`,
        },
      ]);
    }
  });

  scroll(timeline(sequence1), {
    target: scrollTrack1,
  });

  // rest of the script remains unchanged

  //
  //
  const clipVideo = document.getElementById("about-video-container");
  const sequence2 = [
    [
      clipVideo,
      {
        clipPath: [
          null,
          "inset(0% 0% 0% 0% round 8px)",
          "inset(0% 0% 0% 0% round 8px)",
        ],
        borderRadius: 0,
        filter: [null, "brightness(.3)", "brightness(.4)", "brightness(1)"],
      },
      {
        at: "<",
      },
    ],
  ];

  scroll(timeline(sequence2), {
    target: scrollTrack2,
  });
</script>
