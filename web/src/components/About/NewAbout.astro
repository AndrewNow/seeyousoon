---
import BrushCanvas from "./BrushCanvas.astro";
---

<div class="container">
  <div class="card">
    <div class="text">
      <h3 class="about-title">About us</h3>
      <h5 class="bio active about-description">
        seeyousoon is a creative culinary collective founded by Kevin Le,
        Michael Ovejas, and Keith Siu.
      </h5>
      <h5 class="bio about-description">
        With experience at renowned restaurants such as Noma, Ikoyi and
        Borago...
      </h5>
      <h5 class="bio about-description">
        Each dining occasion they curate features refined food guided by a
        community-first approach.
      </h5>
    </div>
    <div class="dots">
      <div class="dot active"></div>
      <div class="dot"></div>
      <div class="dot"></div>
    </div>
    <div class="card-video__wrapper">
      <video
        class="card-video"
        preload="metadata"
        autoplay
        playsinline
        muted
        loop
      >
        <source
          src="https://sys-video.s3.ca-central-1.amazonaws.com/sys-about.mp4"
          type="video/mp4"
        />
      </video>
    </div>
  </div>
  <div class="drawing-card card">
    <BrushCanvas />
  </div>
</div>

<style>
  .container {
    height: 88vh;
    width: 98%;
    margin: 0 auto;
    margin-top: 1rem;
    margin-bottom: 20vh;
    display: flex;
    gap: 1rem;
    position: relative;
    z-index: 10;
  }
  .card {
    flex-basis: 1;
    width: 50%;
    height: 100%;
    border-radius: 20px;
    position: relative;
    overflow: hidden;
  }
  .card-video__wrapper {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: relative;
  }
  .card-video {
    position: relative;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .card-video__wrapper::after {
    transition: 0.5s all ease;
    content: "";
    /* opacity: 1; */
    position: absolute;
    display: block;
    z-index: 1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      180deg,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0) 20%,
      rgba(0, 0, 0, 0) 80%,
      rgba(0, 0, 0, 0.85) 100%
    );
  }
  .card-video__wrapper:hover:after {
    /* opacity: 1; */
  }

  .drawing-card {
    background: var(--brown-400);
    color: var(--beige-300);
  }
  .text {
    position: absolute;
    z-index: 10;
    bottom: 2rem;
    left: 2rem;
    width: 100%;
    height: 150px;
  }
  .about-title {
    color: var(--beige-300);
    font-size: 40px;
    font-family: "Denim-regular";
    margin-bottom: 1rem;
  }
  .about-description {
    color: var(--beige-100);
    letter-spacing: unset;
    font-family: "Denim-regular";
  }
  .dots {
    z-index: 10;
    position: absolute;
    top: 2.5rem;
    left: 2rem;
    width: 40%;
    display: flex;
    gap: 0.75rem;
  }

  .dot {
    background: #d9d9d950;
    border-radius: 10px;
    width: 100%;
    height: 4px;
    /* opacity: 0.5; */
    position: relative;
    overflow: hidden;
    z-index: 1;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
  }

  .dot::after {
    content: "";
    border-radius: 10px;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* background: red; */
    transform: scaleX(0);
    transform-origin: left;
    opacity: 1;
    z-index: 5;
    background: #d9d9d9;
  }
  .dot.active::after {
    animation: progress 5s linear forwards;
  }

  @keyframes progress {
    0% {
      transform: scaleX(0);
    }
    100% {
      transform: scaleX(1);
    }
  }
  .bio.active {
    opacity: 1;
    transition: 0.75s all ease-out;
    transition-delay: 0.45s;
    filter: blur(0px);
    transform: translateY(0px);
  }
  .bio {
    width: 70%;
    opacity: 0;
    position: absolute;
    transition: 0.45s all ease-in;
    transform: translateY(5px);
    /* filter: blur(8px); */
  }
  /* .bio:last-of-type {
    width: 90%;
  } */

  @media (max-width: 1500px) {
    .text {
      height: 120px;
    }
    .about-title {
      font-size: 28px;
    }
    .about-description {
      font-size: 22px;
    }
  }
  @media (max-width: 1280px) {
    .text {
      height: 100px;
    }
    .about-title {
      font-size: 20px;
    }
    .about-description {
      font-size: 18px;
    }
  }

  @media (max-width: 768px) {
    .container {
      flex-direction: column;
      height: 100%;
      width: var(--mobile-width);
      margin-bottom: 15vh;
      /* margin-top: .5rem; */

      /* gap: .5rem; */
    }
    .card {
      height: 75vh;
      border-radius: 8px;
      width: 100%;
    }
    .text {
      bottom: 0rem;
      left: 1rem;
      width: 100%;
      height: 110px;
    }
    .about-title {
      font-size: 18px;
      font-family: "Denim-regular";
      margin-bottom: 1rem;
    }
    .about-description {
      font-size: 14px;
      color: var(--beige-100);
      letter-spacing: unset;
      font-family: "Denim-regular";
      line-height: 150%;
    }
    .bio {
      width: 90%;
    }
    .bio:last-of-type {
      width: 100%;
    }
    .dots {
      top: 1.5rem;
      left: 1rem;
      width: 55%;
      gap: 0.5rem;
    }
    .dot {
      height: 3px;
    }
  }
</style>

<script>
  const bios = document.querySelectorAll(".bio");
  const dots = document.querySelectorAll(".dot");
  let currentIndex = 0;
  let animationInterval;

  function activateNext() {
    // Remove the active class from current elements
    bios[currentIndex].classList.remove("active");
    dots[currentIndex].classList.remove("active");

    // Calculate the next index
    currentIndex = (currentIndex + 1) % bios.length;

    // Add the active class to the next elements
    bios[currentIndex].classList.add("active");
    dots[currentIndex].classList.add("active");

    // Force a reflow to restart the animation
    dots[currentIndex].offsetWidth;
  }

  function startAnimation() {
    // Reset the index to 0 and update classes
    currentIndex = 0;
    bios.forEach((bio, index) => {
      bio.classList.toggle("active", index === 0);
    });
    dots.forEach((dot, index) => {
      dot.classList.toggle("active", index === 0);
    });

    // Force a reflow to ensure the animation starts
    dots[0].offsetWidth;

    // Start the interval
    animationInterval = setInterval(activateNext, 5000);
  }

  function stopAnimation() {
    clearInterval(animationInterval);
    
    // Remove active class from all dots and bios
    dots.forEach(dot => dot.classList.remove("active"));
    bios.forEach(bio => bio.classList.remove("active"));
  }

  // Create an Intersection Observer
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        startAnimation();
      } else {
        stopAnimation();
      }
    });
  }, {
    threshold: 0.5 // Trigger when 50% of the target is visible
  });

  // Observe the container element
  const container = document.querySelector('.container');
  if (container) {
    observer.observe(container);
  }

  // Initially remove active class from all dots and bios
  stopAnimation();
</script>
