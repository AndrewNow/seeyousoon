---
import { Image } from "astro:assets";
const { eventData, index } = Astro.props;
function convertDateFormat(inputDate) {
  // Parse the input date string in the "YYYY-MM-DD" format
  const parts = inputDate.split("-");
  const year = parseInt(parts[0], 10);
  const month = parseInt(parts[1], 10);
  const day = parseInt(parts[2], 10);
  // Create a Date object
  const dateObject = new Date(year, month - 1, day);
  // Format the date in the "DD-MM-YYYY" format
  const formattedDate = `${dateObject.getDate().toString().padStart(2, "0")}.${(
    dateObject.getMonth() + 1
  )
    .toString()
    .padStart(2, "0")}.${dateObject.getFullYear()}`;
  return formattedDate;
}
const convertedDate = convertDateFormat(eventData.date);
---

<div class="event-entry-wrapper">
  <div class="event-text-wrapper">
    <div class="event-text-inner">
      <div class="event-title-area">
        <h4>
          {eventData.title}
        </h4>
        <p>
          <small class="description">
            {eventData.description}
          </small>
        </p>
      </div>
      <div class="event-details-area">
        <div>
          <p>
            <small>
              Where <br />
            </small>
          </p>
          <small>
            {eventData.location}
          </small>
        </div>
        <div>
          <p>
            <small>
              When <br />
            </small>
          </p>
          <small>
            {convertedDate}
          </small>
        </div>
      </div>
    </div>
  </div>
  <div class="marquee-wrapper">
    <div
      id="pastEvents-marquee"
      data-image-count={eventData.images.length}
      data-index={index}
    >
      <div class="pastEvents-image-wrapper">
        {
          eventData.images.map((el) => {
            const imgSrcLarge = `${el.imageSrc}?w=717&fm=webp`;
            const imgSrcMedium = `${el.imageSrc}?w=378&fm=webp`;
            const imgSrcSmall = `${el.imageSrc}?w=301&fm=webp`;
            return (
              <Image
                format="webp"
                src={imgSrcLarge}
                srcset={`${imgSrcLarge}, ${imgSrcMedium}, ${imgSrcSmall}`}
                alt={
                  el.altText
                    ? el.altText
                    : "No descriptive text was entered for this image, sorry!"
                }
                width="563"
                height="375"
                widths={[301, 378, 717]}
                sizes={`(max-width: 576px) 301px, (max-width: 768px) 378px, (max-width: 1600px) 717px`}
                quality={30}
                decoding="async"
                loading="lazy"
              />
            );
          })
        }
      </div>
    </div>
  </div>
</div>
<style lang="scss">
  #pastEvents-marquee {
    width: 100%;
    overflow: hidden;
    position: relative;
  }
  .marquee-wrapper {
    position: relative;

    &:before {
      content: "";
      position: absolute;
      top: 0;
      right: 0;
      height: 100%;
      width: 5vw;
      opacity: 1;
      backdrop-filter: blur(10px);
      z-index: 1;
      mask: linear-gradient(to right, transparent, black 95%);
      -webkit-mask: linear-gradient(to right, transparent, black 95%);
    }
    &:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 5vw;
      opacity: 1;
      backdrop-filter: blur(10px);
      mask: linear-gradient(to left, transparent, black 95%);
      -webkit-mask: linear-gradient(to left, transparent, black 95%);
    }
  }
  .event-entry-wrapper {
    margin-bottom: 5rem;
  }
  .event-entry-wrapper:first-child {
    border-top: none;
  }
  .event-text-wrapper {
    width: 95%;
    margin: 5rem auto;
    padding-top: 2.5rem;
    border-top: 1px solid var(--brown-100);
    .event-text-inner {
      width: 97.5%;
      margin: 0 auto;
      display: flex;
      justify-content: flex-start;
    }
    h4,
    p {
      color: var(--beige-300);
    }
    p > small {
      color: var(--grey-300);
    }
  }
  .event-title-area {
    flex: 1.5;
    max-width: 50%;
    p {
      width: 65%;
    }
  }
  .event-details-area {
    flex: 1;
    max-width: 500px;
    display: flex;
    justify-content: space-between;
    color: white;
  }
  .pastEvents-image-wrapper {
    display: flex;
    img {
      border-radius: 4px;
      max-width: 100%;
      height: 475px; // was 375
      width: auto;
      margin-right: 1.5rem;
    }
  }

  @media (max-width: 768px) {
    .event-text-wrapper {
      margin-bottom: 2.5rem;
    }
    .event-text-inner {
      flex-direction: column;
    }
    .event-title-area {
      max-width: 100%;
      p {
        width: 100%;
        line-height: 115%;
      }
    }
    .event-details-area {
      margin-top: 2rem;
      width: 80%;
    }
    .pastEvents-image-wrapper {
      img {
        height: 250px;
        margin-right: 1rem;
      }
    }
  }

  @media (max-width: 576px) {
    #pastEvents-marquee {
      margin: 0 0.5rem;
      overflow-x: scroll;
    }
    .pastEvents-image-wrapper {
      img {
        height: 200px;
      }
    }
  }
</style>
